1.Declare pointers to 2 data stractures/linked lists, for stack 'a' and 'b'
//set them to NULL to avoid undefined behaviour
2.Handle input count errors. Argument count must be 2 or more, the second input must not be empty. // If input errors, return error
3.Handle input in one way, either a variable number of command line arguments, or as a string // if the input of numbers is as a string, call split() to split the substrings
4.Initialize stack 'a' by appending each input number as a node to stack 'a'
			//Handle integer overflow, duplicates, and syntax errors, e.g. input must only contain digits, or '-' '+' signs
                   //If errors found, free stack 'a' and  return error
            //Check for each input, if it is a long integer
				 // if the input is a string, convert it to a long integer
			//Append the nodes to stack 'a'
5. Check if stack 'a' is sorted
   //If not sorted, implement our sorting algorithm
            //Check for 2 numbers
					//if so, simply swap the numbers
			//Chekc for 3 numbers
					//if so, implement simple 'sort three' algorithm
			//Check more than 3
					//if so, implement 'sort big number'
